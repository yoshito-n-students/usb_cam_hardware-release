<library path="lib/libusb_cam_controllers">

  <class name="usb_cam_controllers/CameraInfoController" type="usb_cam_controllers::CameraInfoController" 
         base_class_type="controller_interface::ControllerBase">
    <description>
      This controller publishes camera info whose timestamp is synchronized to a packet read by the hardware. 
      The controller expects a usb_cam_hardware_interface::PacketInterface as hardware interface.
    </description>
  </class>

  <class name="usb_cam_controllers/CompressedPacketController" type="usb_cam_controllers::CompressedPacketController" 
         base_class_type="controller_interface::ControllerBase">
    <description>
      This controller publishes raw packets read by the hardware as sensor_msgs::CompressedImage.
      The controller expects a usb_cam_hardware_interface::PacketInterface as hardware interface.
    </description>
  </class>

  <class name="usb_cam_controllers/H264Controller" type="usb_cam_controllers::H264Controller" 
         base_class_type="controller_interface::ControllerBase">
    <description>
      This controller publishes images by decoding h264-encoded packets read by the hardware. 
      The controller expects a usb_cam_hardware_interface::PacketInterface as hardware interface.
    </description>
  </class>

  <class name="usb_cam_controllers/MjpegController" type="usb_cam_controllers::MjpegController" 
         base_class_type="controller_interface::ControllerBase">
    <description>
      This controller publishes images by decoding mjpeg-encoded packets read by the hardware. 
      The controller expects a usb_cam_hardware_interface::PacketInterface as hardware interface.
    </description>
  </class>

  <class name="usb_cam_controllers/PacketController" type="usb_cam_controllers::PacketController" 
         base_class_type="controller_interface::ControllerBase">
    <description>
      This controller publishes raw packets read by the hardware as sensor_msgs::Image.
      The controller expects a usb_cam_hardware_interface::PacketInterface as hardware interface.
    </description>
  </class>

  <class name="usb_cam_controllers/RGB24Controller" type="usb_cam_controllers::RGB24Controller" 
         base_class_type="controller_interface::ControllerBase">
    <description>
      This controller publishes images by converting pixel formats (24bit RGB -> 24bit BGR) 
      The controller expects a usb_cam_hardware_interface::PacketInterface as hardware interface.
    </description>
  </class>

  <class name="usb_cam_controllers/UYVYController" type="usb_cam_controllers::UYVYController" 
         base_class_type="controller_interface::ControllerBase">
    <description>
      This controller publishes images by converting pixel formats (UYVY -> 24bit BGR) 
      The controller expects a usb_cam_hardware_interface::PacketInterface as hardware interface.
    </description>
  </class>

    <class name="usb_cam_controllers/YUYVController" type="usb_cam_controllers::YUYVController" 
         base_class_type="controller_interface::ControllerBase">
    <description>
      This controller publishes images by converting pixel formats (YUYV -> 24bit BGR) 
      The controller expects a usb_cam_hardware_interface::PacketInterface as hardware interface.
    </description>
  </class>

</library>